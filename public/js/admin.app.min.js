"use strict";function passwordVerify(){function e(e,r,t,a){e.$watch(function(){var r;return(e.passwordVerify||a)&&(r=e.passwordVerify+"_"+a),r},function(r){r&&(a.$validators.passwordVerify=function(r){var t=e.passwordVerify;return t===r})})}var r={require:"ngModel",scope:{passwordVerify:"="},link:e};return r}angular.module("myAdmin",["ngMaterial","ngAnimate","ngSanitize","app.routes","app.config","app.controllers","app.directives","app.factories","app.filters","ngMessages","LocalStorageModule","ui.bootstrap"]),angular.module("app.controllers",[]),angular.module("app.factories",[]),angular.module("app.directives",[]),angular.module("app.filters",[]),angular.module("app.config",["LocalStorageModule"]).config(["$httpProvider",function(e){var r=["$q","localStorageService","AuthSrv","$location","$rootScope",function(e,r,t,a,o){return{request:function(e){e.headers=e.headers||{};var a=r.get("token");return a&&(e.headers.Authorization="Bearer "+a,t.isLogged=1),e},requestError:function(r){return e.reject(r)},response:function(r){return r||e.when(r)},responseError:function(n){return 401===n.status&&void 0!==n.data.errors.code&&(o.$broadcast("TokenExpiredError",{message:"Session has been expired, please login again."}),r.remove("token"),r.remove("admin"),delete o.admin,t.isLogged=!1,a.path("/")),e.reject(n)}}}];e.interceptors.push(r)}]).config(["$mdThemingProvider",function(e){e.theme("default").primaryPalette("deep-purple").accentPalette("deep-purple"),e.enableBrowserColor({theme:"blue",palette:"blue",hue:"800"})}]).config(["localStorageServiceProvider",function(e){e.setPrefix("admin")}]).run(["$location","$rootScope","localStorageService","AuthSrv","toastService",function(e,r,t,a,o){r.$on("$routeChangeStart",function(r,o,n){if(null===o||void 0===o.access||!o.access.requiredLogin||a.isLogged||t.get("admin")){console.log("inside else");var s=t.get("token");"/"===e.path()&&s&&e.path("/dashboard")}else console.log("inside if"),a.isLogged=0,e.path("/")}),r.clearToken=function(){t.remove("token"),t.remove("admin"),delete r.admin,a.isLogged=!1,e.path("/login")},r.$on("TokenExpiredError",function(e,r){o.alert({message:r.message,class:"error"})}),r.admin=t.get("admin")}]),angular.module("app.routes",["ngRoute","angular-loading-bar"]).config(["$routeProvider","cfpLoadingBarProvider","$locationProvider",function(e,r,t){r.includeSpinner=!1,e.when("/",{controller:"authCtrl",controllerAs:"vm",templateUrl:"Admin/auth/views/login.html",access:{requiredLogin:!1}}).when("/dashboard",{controller:"dashboardCtrl",controllerAs:"vm",templateUrl:"Admin/dashboard/views/dashboard.html",access:{requiredLogin:!0}}).when("/profile",{controller:"profileCtrl",controllerAs:"vm",templateUrl:"Admin/profile/views/profile.html",access:{requiredLogin:!0}}).when("/categories",{controller:"categoryCtrl",controllerAs:"vm",templateUrl:"Admin/categories/views/categories.html",access:{requiredLogin:!0}}).otherwise({redirectTo:"/"})}]),angular.module("app.factories").factory("RestSvr",["$http",function(e){return{search:function(r,t,a){var o=angular.isUndefined(a)?"":"?"+a;return e.post(r+o,t).then(function(e){return{records:e.data.data.records,paging:e.data.data.paging}},function(e){return{errors:e.data.errors}})},login:function(r,t){return e.post(r,t).then(function(e){return{result:e.data.success,user:e.data.user,token:e.data.token}},function(e){return{errors:e.data.errors}})},paginate:function(r,t,a,o){var n=angular.isUndefined(t)?"":t,s=angular.isUndefined(a)?"":"?"+a;return e.get(r+n+s,o).then(function(e){return{records:e.data.data.records,paging:e.data.data.paging,group:e.data.data.group}})},get:function(r,t){var a=angular.isUndefined(t)?null:t;return e.get(r,a).then(function(e){return{record:e.data.data.record}})},getById:function(r,t){return e.get(r+t).then(function(e){return{record:e.data}})},post:function(r,t){return e.post(r,t).then(function(e){return{result:e.data.data.success,message:e.data.data.message,data:e.data.data.record}},function(e){return{errors:e.data.errors}})},put:function(r,t,a,o){var n=angular.isUndefined(o)?null:o;return e.put(r+t,a,n).then(function(e){return{result:e.data.success,message:e.data.message,data:e.data.record}},function(e){return{errors:e.data.errors}})},delete:function(r,t){return e.delete(r+t).then(function(e){return{message:e.data.data.message,result:e.data.data.success}},function(e){return{errors:e.data.errors}})}}}]),angular.module("app.factories").factory("toastService",["$mdToast","$timeout",function(e,r){return{alert:function(t){e.hide(),r(function(){var r=e.simple().textContent(t.message).position("bottom right").toastClass("fixed "+t.class).action("x").hideDelay(3e3);e.show(r).then(function(r){"ok"==r&&e.hide()})},1e3)}}}]),angular.module("app.directives").directive("setHeight",["$window",function(e){return{restrict:"A",link:function(r,t,a){t.css("min-height",e.innerHeight-50+"px")}}}]),angular.module("app.factories").factory("AuthSrv",function(){var e={isLogged:!1};return e}),angular.module("app.controllers").controller("authCtrl",["$scope","$location","localStorageService","RestSvr","toastService","AuthSrv","$rootScope",function(e,r,t,a,o,n,s){function i(e){e&&a.login("admin/login",d.admin).then(function(e){e.errors?o.alert({message:e.errors.message,class:"error"}):(t.set("token",e.token),t.set("admin",e.user),n.isLogged=!0,s.admin=t.get("admin"),r.path("/dashboard"))})}var d=this;d.signin=i}]),angular.module("app.controllers").controller("dashboardCtrl",["$scope","$location","localStorageService","RestSvr","toastService","AuthSrv","$rootScope",function(e,r,t,a,o,n,s){console.log("DashboardCrl")}]),angular.module("app.directives").directive("passwordVerify",passwordVerify),angular.module("app.controllers").controller("profileCtrl",["$scope","$location","localStorageService","RestSvr","toastService","$rootScope","$timeout",function(e,r,t,a,o,n,s){function i(e){e&&a.put("admin/profile/",c.admin._id,c.admin).then(function(e){e.errors?o.alert({message:e.errors.message,class:"error"}):(o.alert({message:e.message,class:"success"}),t.set("admin",e.data),n.admin=t.get("admin"))})}function d(e){if(e)return c.passwordDetails.new_password!==c.passwordDetails.confirm_password?void o.alert({message:"New password and confirm password are not same",class:"error"}):void a.put("admin/change_password/",c.admin._id,c.passwordDetails).then(function(e){e.errors?o.alert({message:e.errors.message,class:"error"}):(c.changePasswordForm.$setPristine(),c.changePasswordForm.$setUntouched(),s(function(){c.passwordDetails={}},1e3),o.alert({message:e.message,class:"success"}))})}var c=this;c.admin=t.get("admin"),c.update=i,c.changePassword=d}]);